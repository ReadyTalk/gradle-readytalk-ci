buildscript {
  apply from: file('gradle/repositories.gradle')
  apply from: file('gradle/credentials.gradle')
}

plugins {
  id 'groovy'
  id 'jacoco'
  id 'idea'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version '0.9.0'
  id 'com.jfrog.artifactory' version '3.1.1'
  id 'nebula.info' version '2.2.2'
  id 'com.github.kt3k.coveralls' version '2.0.1'
}

apply plugin: 'com.readytalk.ci'
apply plugin: 'com.readytalk.ci.version.snapshot'

sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
  compile (
    gradleApi(),
    localGroovy(),
    'com.netflix.nebula:gradle-info-plugin:1.9.5',
    'org.eclipse.jgit:org.eclipse.jgit:3.7.1.201504261725-r',
  )

  //Gradle doesn't yet handle dependency resolution conflicts for localGroovy()
  //See: http://forums.gradle.org/gradle/topics/conflicting_module_versions_with_groovy_gradle_2_0_rc_1
  testCompile('com.netflix.nebula:nebula-test:2.2.1') {
    exclude group:'org.codehaus.groovy'
  }

  //Allow testing of optional plugin configuration
  testCompile (
    'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1',
    'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2',
    'com.gradle.publish:plugin-publish-plugin:0.9.0',
  )
}

pluginBundle {
  website = 'http://oss.readytalk.com/gradle-readytalk-ci'
  vcsUrl = 'https://github.com/ReadyTalk/gradle-readytalk-ci.git'
  description = "CI Lifecycle and Conventions"
  tags = [ 'gradle', 'conventions', 'publishing', 'ci' ]

  plugins {
    ciPlugin {
      id = 'com.readytalk.ci'
      displayName = 'ReadyTalk CI Plugin'
    }
  }
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      artifact publishPluginJar {
        classifier 'sources'
      }
      artifact publishPluginGroovyDocsJar {
        classifier 'groovydoc'
      }
      artifact publishPluginJavaDocsJar {
        classifier 'javadoc'
      }
    }
  }
}

artifactory {
  contextUrl = 'http://oss.jfrog.org/artifactory'
  publish {
    repository {
      repoKey = 'oss-snapshot-local'
      username = bintrayUser
      password = bintrayKey
      maven = true
    }
  }
}

tasks.coveralls {
  dependsOn 'jacocoTestReport'
  onlyIf { buildEnv.ci }
}

jacocoTestReport {
  dependsOn 'integTest'
  reports {
    xml.enabled true
    html.destination "${buildDir}/jacocoHtml"
  }
}

tasks.withType(Test) { testTask ->
  // Run tests in parallel
  testTask.maxParallelForks = Runtime.runtime.availableProcessors()
}

tasks.ci.dependsOn tasks.coveralls
artifactoryPublish.onlyIf { ! buildEnv.release }

wrapper.gradleVersion = '2.4'
